# -*- coding: utf-8 -*-
"""IPL_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/183aZMeEoJFzDvs6_y0bq33FZ2wMrVOXD

# IPL 2024 Data Analytics
---------------------------------------------------------------------------
### By Pratik Upadhye
"""

# Loading required libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
plt.rcParams['figure.figsize'] = (14, 8)

# Path where the CSV file is stored
data='/content/ipl_2024.csv'

# Reading the CSV file as a dataframe using pandas
matches=pd.read_csv(data)

# No. of rows and columns in the dataframe
matches.shape

matches.head()

matches.describe()

matches.info()

"""# IPL 2008-2019 Data Analytics
---------------------------------------------------------------------------
### By Pratik Upadhye
"""

# Path where the CSV file is stored
pathoffile='/content/matches.csv'

# Reading the CSV file as a dataframe using pandas
matches=pd.read_csv(pathoffile)

# No. of rows and columns in the dataframe
matches.shape

matches.head()

matches.describe()

matches.info()

matches['season'].unique()

max(matches['win_by_runs'])

# 1.Match won by the maximum margin of runs
matches.iloc[matches['win_by_runs'].idxmax()]

max(matches['win_by_wickets'])

# 2.Match won by maximum wickets
matches.iloc[matches['win_by_wickets'].idxmax()]

# 3.Match won by minimum margin of runs (not by 1 run)
matches.iloc[matches[matches['win_by_runs'].ge(1)].win_by_runs.idxmin()]

# 4.Match won by minimum wickets (not by 0 wickets)
matches.iloc[matches[matches['win_by_wickets'].ge(1)].win_by_wickets.idxmin()]

matches['dl_applied'].unique()  #5

# 6.Plot to visualise the no. of matches held in each city
sns.countplot(y='city', data=matches)
plt.title('No. of matches held in each city\n')
plt.xlabel('\nNo. of matches held')
plt.ylabel('Cities\n')
plt.xlim([0,120])
plt.show()

# 7.No. of matches won by each team
matches['winner'].value_counts()

# 8.Plot to visualise the no. of matches won by each team
data=matches['winner'].value_counts()
fig, ax=plt.subplots()
ax.set_xlim([0,120])
sns.barplot(y=data.index, x=data, orient='h')
plt.title('No. of matches won by each team\n')
plt.xlabel("\nNo. of matches won")
plt.ylabel('Teams\n')
plt.show()

# 9.Plot to visualise the no. of matches held every season
sns.countplot(x='season', data=matches)
plt.title('No. of matches held every season\n')
plt.xlabel('\nSeason')
plt.ylabel('No. of matches held\n')
plt.show()

# 10.Picking the top 10 players based on the no. of Man of Match (MOM) awards won
mom=matches['player_of_match'].value_counts()[:10]
mom

# 11.Plot to visualise the top 10 players based on the no. of MOM awards won
fig, ax=plt.subplots()
ax.set_ylim([0,28])
ax.set_title('Top 10 players based on no. of MOM awards won\n')
sns.barplot(x=mom.index, y=mom, orient='v')
plt.ylabel('No. of MOM awards won\n')
plt.xlabel('\nPlayers')
plt.show()

# 12.Does winning the toss mean winning the match?
winnerwinner=matches['toss_winner']== matches['winner']
winnerwinner.groupby(winnerwinner).size()

# 13.% of games where the toss winning team lost the match (indicated by false) and toss winning team won the match(indicated by true)
round(winnerwinner.groupby(winnerwinner).size() / winnerwinner.count() * 100,2)

# 14.How many times did the captain choose fielding and batting after winning the toss?
matches['toss_decision'].value_counts()

## 15.Stadiums which have hosted D/L method applied matches
matches.query('dl_applied==1')['venue']

# 16.Plot to visualise the no. of matches where D/L method was applied season wise
fig, ax=plt.subplots()
ax.set_ylim([0,5])
ax.set_title('No. of matches where D/L method was applied, season wise\n')
sns.countplot(x=year, data=matches)
plt.xlabel('\nSeason')
plt.ylabel('No. of matches\n')
plt.show()

# 17.Different results for games
matches['result'].value_counts()

# 18.Plot to visualise the no. of tosses won by each team
toss=matches['toss_winner'].value_counts()
fig, ax=plt.subplots()
ax.set_title('No. of tosses won by each team\n')
sns.barplot(y=toss.index, x=toss, orient='h')
plt.xlabel('\nNo. of tosses won')
plt.ylabel('Teams\m')
plt.show()

# 19.No. of matches played in different stadiums
sns.countplot(y='venue', data=matches)
plt.title('No. of matches played in different stadiums\n')
plt.xlabel('\nNo. of matches played')
plt.ylabel('Stadiums\n')
plt.show()